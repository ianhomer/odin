// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sequences container renders OK 1`] = `
<Notation
  clazz={
    Clazz {
      "getClazz": [Function],
      "id": "flow-notation",
      "path": "sequence",
      "properties": Object {
        "channel": Object {
          "title": "Channel",
          "type": "integer",
        },
        "enabled": Object {
          "title": "Enabled",
          "type": "boolean",
        },
        "format": Object {
          "title": "Format",
          "type": "string",
        },
        "layers": Object {
          "items": Object {
            "type": "string",
          },
          "title": "Layers",
          "type": "array",
        },
        "length": Object {
          "title": "Length",
          "type": "integer",
        },
        "name": Object {
          "title": "Name",
          "type": "string",
        },
        "notation": Object {
          "title": "Notation",
          "type": "string",
        },
        "offset": Object {
          "title": "Offset",
          "type": "integer",
        },
        "performance": Object {
          "format": "uri",
          "title": "Performance",
          "type": "string",
        },
        "tick": Object {
          "$ref": "#/definitions/PersistableTick",
          "title": "Tick",
        },
        "triggers": Object {
          "additionalProperties": Object {
            "enum": Array [
              "ENABLE",
              "DISABLE",
            ],
            "type": "string",
          },
          "title": "Triggers",
          "type": "object",
        },
        "type": Object {
          "title": "Flow Name",
          "type": "string",
        },
      },
    }
  }
  entity={
    Object {
      "_links": Object {
        "performance": Object {
          "href": "http://localhost:8080/api/sequence/58/performance",
        },
        "self": Object {
          "href": "http://localhost:8080/api/sequence/58",
        },
        "sequence": Object {
          "href": "http://localhost:8080/api/sequence/58",
        },
      },
      "channel": 4,
      "layers": Array [
        "a",
      ],
      "length": -1,
      "name": "aahs-a",
      "offset": 0,
      "path": "sequence",
      "properties": Object {
        "format": "natural",
        "notation": "C A C5/h C5/8",
      },
      "tick": Object {
        "denominator": 1,
        "numerator": 1,
        "timeUnit": "BEAT",
      },
      "type": "notation",
    }
  }
  fields={
    Object {
      "channel": Object {
        "defaultValue": 1,
      },
      "enabled": Object {
        "defaultValue": true,
        "hidden": true,
      },
      "format": Object {
        "cellWidth": 1,
        "defaultValue": "natural",
        "hidden": true,
      },
      "layers": Object {
        "defaultValue": "",
        "hidden": true,
      },
      "length": Object {
        "defaultValue": -1,
      },
      "name": Object {
        "maxLength": 8,
        "size": 8,
      },
      "notation": Object {
        "cellWidth": 3,
        "defaultValue": "C",
      },
      "offset": Object {
        "defaultValue": 0,
      },
      "tick": Object {
        "cellWidth": 2,
        "fields": Object {
          "denominator": Object {
            "cellWidth": 6,
            "defaultValue": 1,
            "label": "/",
          },
          "numerator": Object {
            "cellWidth": 6,
            "defaultValue": 1,
          },
          "timeUnit": Object {
            "defaultValue": "BEAT",
            "hidden": true,
          },
        },
      },
      "type": Object {
        "cellWidth": 2,
        "defaultValue": "notation",
        "readOnly": true,
      },
    }
  }
  onDelete={[Function]}
  onFetchComposition={[Function]}
  onUpdate={[Function]}
  path="notation"
  performance={
    Object {
      "_links": Object {
        "channels": Object {
          "href": "http://localhost:8080/api/performance/1/channels",
        },
        "layers": Object {
          "href": "http://localhost:8080/api/performance/1/layers",
        },
        "performance": Object {
          "href": "http://localhost:8080/api/performance/1",
        },
        "self": Object {
          "href": "http://localhost:8080/api/performance/1",
        },
        "sequences": Object {
          "href": "http://localhost:8080/api/performance/1/sequences",
        },
      },
      "name": "defaultPerformance",
    }
  }
  schema={
    Schema {
      "revision": undefined,
    }
  }
>
  <div
    className="row"
    onClick={[Function]}
  >
    <div
      className="col-1 property-name"
    >
      aahs-a
    </div>
    <div
      className="col-3"
    >
      <Score
        displayText={true}
        entity={
          Object {
            "_links": Object {
              "performance": Object {
                "href": "http://localhost:8080/api/sequence/58/performance",
              },
              "self": Object {
                "href": "http://localhost:8080/api/sequence/58",
              },
              "sequence": Object {
                "href": "http://localhost:8080/api/sequence/58",
              },
            },
            "channel": 4,
            "layers": Array [
              "a",
            ],
            "length": -1,
            "name": "aahs-a",
            "offset": 0,
            "path": "sequence",
            "properties": Object {
              "format": "natural",
              "notation": "C A C5/h C5/8",
            },
            "tick": Object {
              "denominator": 1,
              "numerator": 1,
              "timeUnit": "BEAT",
            },
            "type": "notation",
          }
        }
        height={120}
        onFetchComposition={[Function]}
        width={800}
      >
        <div>
          <span
            className="property-notation"
          >
            C A C5/h C5/8
          </span>
          <span
            id="http://localhost:8080/api/sequence/58-notation-1"
          />
        </div>
      </Score>
    </div>
    <div
      className="col-2 component"
    >
      <Tick
        denominator={1}
        numerator={1}
        timeUnit="BEAT"
      >
        <div
          className="row"
        >
          <div
            className="col-md-6"
          />
          <div
            className="col-md-6"
          >
            Â 
          </div>
        </div>
      </Tick>
    </div>
    <div
      className="col-1 property-offset"
    >
      0
    </div>
    <div
      className="col-1 property-length"
    >
      -1
    </div>
    <div
      className="col-1 property-channel"
    >
      4
    </div>
    <div
      className="col-2"
    >
      notation
    </div>
    <div
      className="col-1"
    >
      <button
        className="btn btn-primary"
        onClick={[Function]}
        type="submit"
      >
        Delete
      </button>
    </div>
  </div>
</Notation>
`;

exports[`Sequences container renders OK 2`] = `
<Notation
  clazz={
    Clazz {
      "getClazz": [Function],
      "id": "flow-notation",
      "path": "sequence",
      "properties": Object {
        "channel": Object {
          "title": "Channel",
          "type": "integer",
        },
        "enabled": Object {
          "title": "Enabled",
          "type": "boolean",
        },
        "format": Object {
          "title": "Format",
          "type": "string",
        },
        "layers": Object {
          "items": Object {
            "type": "string",
          },
          "title": "Layers",
          "type": "array",
        },
        "length": Object {
          "title": "Length",
          "type": "integer",
        },
        "name": Object {
          "title": "Name",
          "type": "string",
        },
        "notation": Object {
          "title": "Notation",
          "type": "string",
        },
        "offset": Object {
          "title": "Offset",
          "type": "integer",
        },
        "performance": Object {
          "format": "uri",
          "title": "Performance",
          "type": "string",
        },
        "tick": Object {
          "$ref": "#/definitions/PersistableTick",
          "title": "Tick",
        },
        "triggers": Object {
          "additionalProperties": Object {
            "enum": Array [
              "ENABLE",
              "DISABLE",
            ],
            "type": "string",
          },
          "title": "Triggers",
          "type": "object",
        },
        "type": Object {
          "title": "Flow Name",
          "type": "string",
        },
      },
    }
  }
  entity={
    Object {
      "_links": Object {
        "performance": Object {
          "href": "http://localhost:8080/api/sequence/58/performance",
        },
        "self": Object {
          "href": "http://localhost:8080/api/sequence/58",
        },
        "sequence": Object {
          "href": "http://localhost:8080/api/sequence/58",
        },
      },
      "channel": 4,
      "layers": Array [
        "a",
      ],
      "length": -1,
      "name": "aahs-a",
      "offset": 0,
      "path": "sequence",
      "properties": Object {
        "format": "natural",
        "notation": "C A C5/h C5/8",
      },
      "tick": Object {
        "denominator": 1,
        "numerator": 1,
        "timeUnit": "BEAT",
      },
      "type": "notation",
    }
  }
  fields={
    Object {
      "channel": Object {
        "defaultValue": 1,
      },
      "enabled": Object {
        "defaultValue": true,
        "hidden": true,
      },
      "format": Object {
        "cellWidth": 1,
        "defaultValue": "natural",
        "hidden": true,
      },
      "layers": Object {
        "defaultValue": "",
        "hidden": true,
      },
      "length": Object {
        "defaultValue": -1,
      },
      "name": Object {
        "maxLength": 8,
        "size": 8,
      },
      "notation": Object {
        "cellWidth": 3,
        "defaultValue": "C",
      },
      "offset": Object {
        "defaultValue": 0,
      },
      "tick": Object {
        "cellWidth": 2,
        "fields": Object {
          "denominator": Object {
            "cellWidth": 6,
            "defaultValue": 1,
            "label": "/",
          },
          "numerator": Object {
            "cellWidth": 6,
            "defaultValue": 1,
          },
          "timeUnit": Object {
            "defaultValue": "BEAT",
            "hidden": true,
          },
        },
      },
      "type": Object {
        "cellWidth": 2,
        "defaultValue": "notation",
        "readOnly": true,
      },
    }
  }
  onDelete={[Function]}
  onFetchComposition={[Function]}
  onUpdate={[Function]}
  path="notation"
  performance={
    Object {
      "_links": Object {
        "channels": Object {
          "href": "http://localhost:8080/api/performance/1/channels",
        },
        "layers": Object {
          "href": "http://localhost:8080/api/performance/1/layers",
        },
        "performance": Object {
          "href": "http://localhost:8080/api/performance/1",
        },
        "self": Object {
          "href": "http://localhost:8080/api/performance/1",
        },
        "sequences": Object {
          "href": "http://localhost:8080/api/performance/1/sequences",
        },
      },
      "name": "defaultPerformance",
    }
  }
  schema={
    Schema {
      "revision": undefined,
    }
  }
>
  <EditEntity
    clazz={
      Clazz {
        "getClazz": [Function],
        "id": "flow-notation",
        "path": "sequence",
        "properties": Object {
          "channel": Object {
            "title": "Channel",
            "type": "integer",
          },
          "enabled": Object {
            "title": "Enabled",
            "type": "boolean",
          },
          "format": Object {
            "title": "Format",
            "type": "string",
          },
          "layers": Object {
            "items": Object {
              "type": "string",
            },
            "title": "Layers",
            "type": "array",
          },
          "length": Object {
            "title": "Length",
            "type": "integer",
          },
          "name": Object {
            "title": "Name",
            "type": "string",
          },
          "notation": Object {
            "title": "Notation",
            "type": "string",
          },
          "offset": Object {
            "title": "Offset",
            "type": "integer",
          },
          "performance": Object {
            "format": "uri",
            "title": "Performance",
            "type": "string",
          },
          "tick": Object {
            "$ref": "#/definitions/PersistableTick",
            "title": "Tick",
          },
          "triggers": Object {
            "additionalProperties": Object {
              "enum": Array [
                "ENABLE",
                "DISABLE",
              ],
              "type": "string",
            },
            "title": "Triggers",
            "type": "object",
          },
          "type": Object {
            "title": "Flow Name",
            "type": "string",
          },
        },
      }
    }
    entity={
      Object {
        "_links": Object {
          "performance": Object {
            "href": "http://localhost:8080/api/sequence/58/performance",
          },
          "self": Object {
            "href": "http://localhost:8080/api/sequence/58",
          },
          "sequence": Object {
            "href": "http://localhost:8080/api/sequence/58",
          },
        },
        "channel": 4,
        "layers": Array [
          "a",
        ],
        "length": -1,
        "name": "aahs-a",
        "offset": 0,
        "path": "sequence",
        "properties": Object {
          "format": "natural",
          "notation": "C A C5/h C5/8",
        },
        "tick": Object {
          "denominator": 1,
          "numerator": 1,
          "timeUnit": "BEAT",
        },
        "type": "notation",
      }
    }
    fields={
      Object {
        "channel": Object {
          "defaultValue": 1,
        },
        "enabled": Object {
          "defaultValue": true,
          "hidden": true,
        },
        "format": Object {
          "cellWidth": 1,
          "defaultValue": "natural",
          "hidden": true,
        },
        "layers": Object {
          "defaultValue": "",
          "hidden": true,
        },
        "length": Object {
          "defaultValue": -1,
        },
        "name": Object {
          "maxLength": 8,
          "size": 8,
        },
        "notation": Object {
          "cellWidth": 3,
          "defaultValue": "C",
        },
        "offset": Object {
          "defaultValue": 0,
        },
        "tick": Object {
          "cellWidth": 2,
          "fields": Object {
            "denominator": Object {
              "cellWidth": 6,
              "defaultValue": 1,
              "label": "/",
            },
            "numerator": Object {
              "cellWidth": 6,
              "defaultValue": 1,
            },
            "timeUnit": Object {
              "defaultValue": "BEAT",
              "hidden": true,
            },
          },
        },
        "type": Object {
          "cellWidth": 2,
          "defaultValue": "notation",
          "readOnly": true,
        },
      }
    }
    onApply={[Function]}
    onFetchComposition={[Function]}
    performance={
      Object {
        "_links": Object {
          "channels": Object {
            "href": "http://localhost:8080/api/performance/1/channels",
          },
          "layers": Object {
            "href": "http://localhost:8080/api/performance/1/layers",
          },
          "performance": Object {
            "href": "http://localhost:8080/api/performance/1",
          },
          "self": Object {
            "href": "http://localhost:8080/api/performance/1",
          },
          "sequences": Object {
            "href": "http://localhost:8080/api/performance/1/sequences",
          },
        },
        "name": "defaultPerformance",
      }
    }
    schema={
      Schema {
        "revision": undefined,
      }
    }
  >
    <div
      className="entityCreate row"
    >
      <div
        className="col-1"
      >
        <input
          className="inline property-name"
          maxLength={8}
          name="name"
          onChange={[Function]}
          onKeyPress={[Function]}
          placeholder="name"
          size={8}
          type="text"
          value="aahs-a"
        />
      </div>
      <input
        defaultValue="natural"
        name="format"
        type="hidden"
      />
      <div
        className="col-3"
      >
        <Score
          componentKey="notation"
          componentRef={[Function]}
          editor={true}
          entity={
            Object {
              "_links": Object {
                "performance": Object {
                  "href": "http://localhost:8080/api/sequence/58/performance",
                },
                "self": Object {
                  "href": "http://localhost:8080/api/sequence/58",
                },
                "sequence": Object {
                  "href": "http://localhost:8080/api/sequence/58",
                },
              },
              "channel": 4,
              "layers": Array [
                "a",
              ],
              "length": -1,
              "name": "aahs-a",
              "offset": 0,
              "path": "sequence",
              "properties": Object {
                "format": "natural",
                "notation": "C A C5/h C5/8",
              },
              "tick": Object {
                "denominator": 1,
                "numerator": 1,
                "timeUnit": "BEAT",
              },
              "type": "notation",
            }
          }
          height={120}
          onFetchComposition={[Function]}
          onInputChange={[Function]}
          onKeyPress={[Function]}
          size={0}
          width={800}
        >
          <div>
            <span>
              <input
                className="inline property-notation"
                name="notation"
                onChange={[Function]}
                onKeyPress={[Function]}
                placeholder="notation"
                size={0}
                type="text"
                value="C A C5/h C5/8"
              />
            </span>
            <div
              id="http://localhost:8080/api/sequence/58-notation-1"
              style={
                Object {
                  "height": "120px",
                  "width": "800px",
                }
              }
            />
          </div>
        </Score>
      </div>
      <div
        className="component col-2"
      >
        <div
          className="row"
        >
          <div
            className="col-6"
          >
            <input
              className="inline property-numerator"
              maxLength={1024}
              name="tick.numerator"
              onChange={[Function]}
              onKeyPress={[Function]}
              placeholder="tick.numerator"
              size={3}
              type="text"
              value={1}
            />
          </div>
          <div
            className="col-6"
          >
            <span>
              /
            </span>
            <input
              className="inline property-denominator"
              maxLength={1024}
              name="tick.denominator"
              onChange={[Function]}
              onKeyPress={[Function]}
              placeholder="tick.denominator"
              size={3}
              type="text"
              value={1}
            />
          </div>
          <input
            defaultValue="BEAT"
            name="tick.timeUnit"
            type="hidden"
          />
        </div>
      </div>
      <div
        className="col-1"
      >
        <input
          className="inline property-offset"
          maxLength={1024}
          name="offset"
          onChange={[Function]}
          onKeyPress={[Function]}
          placeholder="offset"
          size={3}
          type="text"
        />
      </div>
      <div
        className="col-1"
      >
        <input
          className="inline property-length"
          maxLength={1024}
          name="length"
          onChange={[Function]}
          onKeyPress={[Function]}
          placeholder="length"
          size={3}
          type="text"
          value={-1}
        />
      </div>
      <div
        className="col-1"
      >
        <input
          className="inline property-channel"
          maxLength={1024}
          name="channel"
          onChange={[Function]}
          onKeyPress={[Function]}
          placeholder="channel"
          size={3}
          type="text"
          value={4}
        />
      </div>
      <div
        className="col-2"
      >
        <span>
          notation
        </span>
        <input
          className="property-type"
          defaultValue="notation"
          name="type"
          type="hidden"
        />
      </div>
      <input
        name="enabled"
        type="hidden"
      />
      <input
        defaultValue={
          Array [
            "a",
          ]
        }
        name="layers"
        type="hidden"
      />
      <div
        className="col-1"
      >
        <input
          defaultValue="http://localhost:8080/api/performance/1"
          name="performance"
          type="hidden"
        />
        <div>
          <input
            defaultValue="http://localhost:8080/api/sequence/58"
            name="_links.self.href"
            type="hidden"
          />
        </div>
        <button
          className="btn btn-primary"
          onClick={[Function]}
          type="submit"
        >
          Update
        </button>
      </div>
    </div>
  </EditEntity>
</Notation>
`;

exports[`Sequences container renders OK 3`] = `
<Notation
  clazz={
    Clazz {
      "getClazz": [Function],
      "id": "flow-notation",
      "path": "sequence",
      "properties": Object {
        "channel": Object {
          "title": "Channel",
          "type": "integer",
        },
        "enabled": Object {
          "title": "Enabled",
          "type": "boolean",
        },
        "format": Object {
          "title": "Format",
          "type": "string",
        },
        "layers": Object {
          "items": Object {
            "type": "string",
          },
          "title": "Layers",
          "type": "array",
        },
        "length": Object {
          "title": "Length",
          "type": "integer",
        },
        "name": Object {
          "title": "Name",
          "type": "string",
        },
        "notation": Object {
          "title": "Notation",
          "type": "string",
        },
        "offset": Object {
          "title": "Offset",
          "type": "integer",
        },
        "performance": Object {
          "format": "uri",
          "title": "Performance",
          "type": "string",
        },
        "tick": Object {
          "$ref": "#/definitions/PersistableTick",
          "title": "Tick",
        },
        "triggers": Object {
          "additionalProperties": Object {
            "enum": Array [
              "ENABLE",
              "DISABLE",
            ],
            "type": "string",
          },
          "title": "Triggers",
          "type": "object",
        },
        "type": Object {
          "title": "Flow Name",
          "type": "string",
        },
      },
    }
  }
  entity={
    Object {
      "_composition": Object {
        "measures": Array [
          Object {
            "key": "C",
            "staves": Array [
              Object {
                "clef": "treble",
                "voices": Array [
                  Object {
                    "notation": "C4/q, B4/h/r, B4/q/r",
                  },
                ],
              },
            ],
            "time": "4/4",
          },
        ],
        "numberOfBeats": Object {
          "denominator": 4,
          "numerator": 4,
        },
      },
      "_links": Object {
        "performance": Object {
          "href": "http://localhost:8080/api/sequence/58/performance",
        },
        "self": Object {
          "href": "http://localhost:8080/api/sequence/58",
        },
        "sequence": Object {
          "href": "http://localhost:8080/api/sequence/58",
        },
      },
      "channel": 4,
      "layers": Array [
        "a",
      ],
      "length": -1,
      "name": "aahs-a",
      "offset": 0,
      "path": "sequence",
      "properties": Object {
        "format": "natural",
        "notation": "C A C5/h C5/8",
      },
      "tick": Object {
        "denominator": 1,
        "numerator": 1,
        "timeUnit": "BEAT",
      },
      "type": "notation",
    }
  }
  fields={
    Object {
      "channel": Object {
        "defaultValue": 1,
      },
      "enabled": Object {
        "defaultValue": true,
        "hidden": true,
      },
      "format": Object {
        "cellWidth": 1,
        "defaultValue": "natural",
        "hidden": true,
      },
      "layers": Object {
        "defaultValue": "",
        "hidden": true,
      },
      "length": Object {
        "defaultValue": -1,
      },
      "name": Object {
        "maxLength": 8,
        "size": 8,
      },
      "notation": Object {
        "cellWidth": 3,
        "defaultValue": "C",
      },
      "offset": Object {
        "defaultValue": 0,
      },
      "tick": Object {
        "cellWidth": 2,
        "fields": Object {
          "denominator": Object {
            "cellWidth": 6,
            "defaultValue": 1,
            "label": "/",
          },
          "numerator": Object {
            "cellWidth": 6,
            "defaultValue": 1,
          },
          "timeUnit": Object {
            "defaultValue": "BEAT",
            "hidden": true,
          },
        },
      },
      "type": Object {
        "cellWidth": 2,
        "defaultValue": "notation",
        "readOnly": true,
      },
    }
  }
  onDelete={[Function]}
  onFetchComposition={[Function]}
  onUpdate={[Function]}
  path="notation"
  performance={
    Object {
      "_links": Object {
        "channels": Object {
          "href": "http://localhost:8080/api/performance/1/channels",
        },
        "layers": Object {
          "href": "http://localhost:8080/api/performance/1/layers",
        },
        "performance": Object {
          "href": "http://localhost:8080/api/performance/1",
        },
        "self": Object {
          "href": "http://localhost:8080/api/performance/1",
        },
        "sequences": Object {
          "href": "http://localhost:8080/api/performance/1/sequences",
        },
      },
      "name": "defaultPerformance",
    }
  }
  schema={
    Schema {
      "revision": undefined,
    }
  }
>
  <EditEntity
    clazz={
      Clazz {
        "getClazz": [Function],
        "id": "flow-notation",
        "path": "sequence",
        "properties": Object {
          "channel": Object {
            "title": "Channel",
            "type": "integer",
          },
          "enabled": Object {
            "title": "Enabled",
            "type": "boolean",
          },
          "format": Object {
            "title": "Format",
            "type": "string",
          },
          "layers": Object {
            "items": Object {
              "type": "string",
            },
            "title": "Layers",
            "type": "array",
          },
          "length": Object {
            "title": "Length",
            "type": "integer",
          },
          "name": Object {
            "title": "Name",
            "type": "string",
          },
          "notation": Object {
            "title": "Notation",
            "type": "string",
          },
          "offset": Object {
            "title": "Offset",
            "type": "integer",
          },
          "performance": Object {
            "format": "uri",
            "title": "Performance",
            "type": "string",
          },
          "tick": Object {
            "$ref": "#/definitions/PersistableTick",
            "title": "Tick",
          },
          "triggers": Object {
            "additionalProperties": Object {
              "enum": Array [
                "ENABLE",
                "DISABLE",
              ],
              "type": "string",
            },
            "title": "Triggers",
            "type": "object",
          },
          "type": Object {
            "title": "Flow Name",
            "type": "string",
          },
        },
      }
    }
    entity={
      Object {
        "_composition": Object {
          "measures": Array [
            Object {
              "key": "C",
              "staves": Array [
                Object {
                  "clef": "treble",
                  "voices": Array [
                    Object {
                      "notation": "C4/q, B4/h/r, B4/q/r",
                    },
                  ],
                },
              ],
              "time": "4/4",
            },
          ],
          "numberOfBeats": Object {
            "denominator": 4,
            "numerator": 4,
          },
        },
        "_links": Object {
          "performance": Object {
            "href": "http://localhost:8080/api/sequence/58/performance",
          },
          "self": Object {
            "href": "http://localhost:8080/api/sequence/58",
          },
          "sequence": Object {
            "href": "http://localhost:8080/api/sequence/58",
          },
        },
        "channel": 4,
        "layers": Array [
          "a",
        ],
        "length": -1,
        "name": "aahs-a",
        "offset": 0,
        "path": "sequence",
        "properties": Object {
          "format": "natural",
          "notation": "C A C5/h C5/8",
        },
        "tick": Object {
          "denominator": 1,
          "numerator": 1,
          "timeUnit": "BEAT",
        },
        "type": "notation",
      }
    }
    fields={
      Object {
        "channel": Object {
          "defaultValue": 1,
        },
        "enabled": Object {
          "defaultValue": true,
          "hidden": true,
        },
        "format": Object {
          "cellWidth": 1,
          "defaultValue": "natural",
          "hidden": true,
        },
        "layers": Object {
          "defaultValue": "",
          "hidden": true,
        },
        "length": Object {
          "defaultValue": -1,
        },
        "name": Object {
          "maxLength": 8,
          "size": 8,
        },
        "notation": Object {
          "cellWidth": 3,
          "defaultValue": "C",
        },
        "offset": Object {
          "defaultValue": 0,
        },
        "tick": Object {
          "cellWidth": 2,
          "fields": Object {
            "denominator": Object {
              "cellWidth": 6,
              "defaultValue": 1,
              "label": "/",
            },
            "numerator": Object {
              "cellWidth": 6,
              "defaultValue": 1,
            },
            "timeUnit": Object {
              "defaultValue": "BEAT",
              "hidden": true,
            },
          },
        },
        "type": Object {
          "cellWidth": 2,
          "defaultValue": "notation",
          "readOnly": true,
        },
      }
    }
    onApply={[Function]}
    onFetchComposition={[Function]}
    performance={
      Object {
        "_links": Object {
          "channels": Object {
            "href": "http://localhost:8080/api/performance/1/channels",
          },
          "layers": Object {
            "href": "http://localhost:8080/api/performance/1/layers",
          },
          "performance": Object {
            "href": "http://localhost:8080/api/performance/1",
          },
          "self": Object {
            "href": "http://localhost:8080/api/performance/1",
          },
          "sequences": Object {
            "href": "http://localhost:8080/api/performance/1/sequences",
          },
        },
        "name": "defaultPerformance",
      }
    }
    schema={
      Schema {
        "revision": undefined,
      }
    }
  >
    <div
      className="entityCreate row"
    >
      <div
        className="col-1"
      >
        <input
          className="inline property-name"
          maxLength={8}
          name="name"
          onChange={[Function]}
          onKeyPress={[Function]}
          placeholder="name"
          size={8}
          type="text"
          value="aahs-changed"
        />
      </div>
      <input
        defaultValue="natural"
        name="format"
        type="hidden"
      />
      <div
        className="col-3"
      >
        <Score
          componentKey="notation"
          componentRef={[Function]}
          editor={true}
          entity={
            Object {
              "_composition": Object {
                "measures": Array [
                  Object {
                    "key": "C",
                    "staves": Array [
                      Object {
                        "clef": "treble",
                        "voices": Array [
                          Object {
                            "notation": "C4/q, B4/h/r, B4/q/r",
                          },
                        ],
                      },
                    ],
                    "time": "4/4",
                  },
                ],
                "numberOfBeats": Object {
                  "denominator": 4,
                  "numerator": 4,
                },
              },
              "_links": Object {
                "performance": Object {
                  "href": "http://localhost:8080/api/sequence/58/performance",
                },
                "self": Object {
                  "href": "http://localhost:8080/api/sequence/58",
                },
                "sequence": Object {
                  "href": "http://localhost:8080/api/sequence/58",
                },
              },
              "channel": 4,
              "layers": Array [
                "a",
              ],
              "length": -1,
              "name": "aahs-a",
              "offset": 0,
              "path": "sequence",
              "properties": Object {
                "format": "natural",
                "notation": "C D E",
              },
              "tick": Object {
                "denominator": 1,
                "numerator": 1,
                "timeUnit": "BEAT",
              },
              "type": "notation",
            }
          }
          height={120}
          onFetchComposition={[Function]}
          onInputChange={[Function]}
          onKeyPress={[Function]}
          size={0}
          width={800}
        >
          <div>
            <span>
              <input
                className="inline property-notation"
                name="notation"
                onChange={[Function]}
                onKeyPress={[Function]}
                placeholder="notation"
                size={0}
                type="text"
                value="C D E"
              />
            </span>
            <div
              id="http://localhost:8080/api/sequence/58-notation-2"
              style={
                Object {
                  "height": "120px",
                  "width": "800px",
                }
              }
            />
          </div>
        </Score>
      </div>
      <div
        className="component col-2"
      >
        <div
          className="row"
        >
          <div
            className="col-6"
          >
            <input
              className="inline property-numerator"
              maxLength={1024}
              name="tick.numerator"
              onChange={[Function]}
              onKeyPress={[Function]}
              placeholder="tick.numerator"
              size={3}
              type="text"
              value={1}
            />
          </div>
          <div
            className="col-6"
          >
            <span>
              /
            </span>
            <input
              className="inline property-denominator"
              maxLength={1024}
              name="tick.denominator"
              onChange={[Function]}
              onKeyPress={[Function]}
              placeholder="tick.denominator"
              size={3}
              type="text"
              value={1}
            />
          </div>
          <input
            defaultValue="BEAT"
            name="tick.timeUnit"
            type="hidden"
          />
        </div>
      </div>
      <div
        className="col-1"
      >
        <input
          className="inline property-offset"
          maxLength={1024}
          name="offset"
          onChange={[Function]}
          onKeyPress={[Function]}
          placeholder="offset"
          size={3}
          type="text"
        />
      </div>
      <div
        className="col-1"
      >
        <input
          className="inline property-length"
          maxLength={1024}
          name="length"
          onChange={[Function]}
          onKeyPress={[Function]}
          placeholder="length"
          size={3}
          type="text"
          value={-1}
        />
      </div>
      <div
        className="col-1"
      >
        <input
          className="inline property-channel"
          maxLength={1024}
          name="channel"
          onChange={[Function]}
          onKeyPress={[Function]}
          placeholder="channel"
          size={3}
          type="text"
          value="5"
        />
      </div>
      <div
        className="col-2"
      >
        <span>
          notation
        </span>
        <input
          className="property-type"
          defaultValue="notation"
          name="type"
          type="hidden"
        />
      </div>
      <input
        name="enabled"
        type="hidden"
      />
      <input
        defaultValue={
          Array [
            "a",
          ]
        }
        name="layers"
        type="hidden"
      />
      <div
        className="col-1"
      >
        <input
          defaultValue="http://localhost:8080/api/performance/1"
          name="performance"
          type="hidden"
        />
        <div>
          <input
            defaultValue="http://localhost:8080/api/sequence/58"
            name="_links.self.href"
            type="hidden"
          />
        </div>
        <button
          className="btn btn-primary"
          onClick={[Function]}
          type="submit"
        >
          Update
        </button>
      </div>
    </div>
  </EditEntity>
</Notation>
`;

exports[`Sequences container renders OK 4`] = `
<Notation
  clazz={
    Clazz {
      "getClazz": [Function],
      "id": "flow-notation",
      "path": "sequence",
      "properties": Object {
        "channel": Object {
          "title": "Channel",
          "type": "integer",
        },
        "enabled": Object {
          "title": "Enabled",
          "type": "boolean",
        },
        "format": Object {
          "title": "Format",
          "type": "string",
        },
        "layers": Object {
          "items": Object {
            "type": "string",
          },
          "title": "Layers",
          "type": "array",
        },
        "length": Object {
          "title": "Length",
          "type": "integer",
        },
        "name": Object {
          "title": "Name",
          "type": "string",
        },
        "notation": Object {
          "title": "Notation",
          "type": "string",
        },
        "offset": Object {
          "title": "Offset",
          "type": "integer",
        },
        "performance": Object {
          "format": "uri",
          "title": "Performance",
          "type": "string",
        },
        "tick": Object {
          "$ref": "#/definitions/PersistableTick",
          "title": "Tick",
        },
        "triggers": Object {
          "additionalProperties": Object {
            "enum": Array [
              "ENABLE",
              "DISABLE",
            ],
            "type": "string",
          },
          "title": "Triggers",
          "type": "object",
        },
        "type": Object {
          "title": "Flow Name",
          "type": "string",
        },
      },
    }
  }
  entity={
    Object {
      "_links": Object {
        "self": Object {
          "href": "http://localhost:8080/api/sequence/58",
        },
      },
      "channel": 5,
      "layers": Array [
        "a",
      ],
      "length": -1,
      "name": "aahs-changed",
      "performance": "http://localhost:8080/api/performance/1",
      "properties": Object {
        "format": "natural",
        "notation": "C D E",
      },
      "tick": Object {
        "denominator": 1,
        "numerator": 1,
        "timeUnit": "BEAT",
      },
      "type": "notation",
    }
  }
  fields={
    Object {
      "channel": Object {
        "defaultValue": 1,
      },
      "enabled": Object {
        "defaultValue": true,
        "hidden": true,
      },
      "format": Object {
        "cellWidth": 1,
        "defaultValue": "natural",
        "hidden": true,
      },
      "layers": Object {
        "defaultValue": "",
        "hidden": true,
      },
      "length": Object {
        "defaultValue": -1,
      },
      "name": Object {
        "maxLength": 8,
        "size": 8,
      },
      "notation": Object {
        "cellWidth": 3,
        "defaultValue": "C",
      },
      "offset": Object {
        "defaultValue": 0,
      },
      "tick": Object {
        "cellWidth": 2,
        "fields": Object {
          "denominator": Object {
            "cellWidth": 6,
            "defaultValue": 1,
            "label": "/",
          },
          "numerator": Object {
            "cellWidth": 6,
            "defaultValue": 1,
          },
          "timeUnit": Object {
            "defaultValue": "BEAT",
            "hidden": true,
          },
        },
      },
      "type": Object {
        "cellWidth": 2,
        "defaultValue": "notation",
        "readOnly": true,
      },
    }
  }
  onDelete={[Function]}
  onFetchComposition={[Function]}
  onUpdate={[Function]}
  path="notation"
  performance={
    Object {
      "_links": Object {
        "channels": Object {
          "href": "http://localhost:8080/api/performance/1/channels",
        },
        "layers": Object {
          "href": "http://localhost:8080/api/performance/1/layers",
        },
        "performance": Object {
          "href": "http://localhost:8080/api/performance/1",
        },
        "self": Object {
          "href": "http://localhost:8080/api/performance/1",
        },
        "sequences": Object {
          "href": "http://localhost:8080/api/performance/1/sequences",
        },
      },
      "name": "defaultPerformance",
    }
  }
  schema={
    Schema {
      "revision": undefined,
    }
  }
>
  <div
    className="row"
    onClick={[Function]}
  >
    <div
      className="col-1 property-name"
    >
      aahs-changed
    </div>
    <div
      className="col-3"
    >
      <Score
        displayText={true}
        entity={
          Object {
            "_links": Object {
              "self": Object {
                "href": "http://localhost:8080/api/sequence/58",
              },
            },
            "channel": 5,
            "layers": Array [
              "a",
            ],
            "length": -1,
            "name": "aahs-changed",
            "performance": "http://localhost:8080/api/performance/1",
            "properties": Object {
              "format": "natural",
              "notation": "C D E",
            },
            "tick": Object {
              "denominator": 1,
              "numerator": 1,
              "timeUnit": "BEAT",
            },
            "type": "notation",
          }
        }
        height={120}
        onFetchComposition={[Function]}
        width={800}
      >
        <div>
          <span
            className="property-notation"
          >
            C D E
          </span>
          <span
            id="http://localhost:8080/api/sequence/58-notation-1"
          />
        </div>
      </Score>
    </div>
    <div
      className="col-2 component"
    >
      <Tick
        denominator={1}
        numerator={1}
        timeUnit="BEAT"
      >
        <div
          className="row"
        >
          <div
            className="col-md-6"
          />
          <div
            className="col-md-6"
          >
            Â 
          </div>
        </div>
      </Tick>
    </div>
    <div
      className="col-1 property-offset"
    />
    <div
      className="col-1 property-length"
    >
      -1
    </div>
    <div
      className="col-1 property-channel"
    >
      5
    </div>
    <div
      className="col-2"
    >
      notation
    </div>
    <div
      className="col-1"
    >
      <button
        className="btn btn-primary"
        onClick={[Function]}
        type="submit"
      >
        Delete
      </button>
    </div>
  </div>
</Notation>
`;
